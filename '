Spine = require('spine')
_ = require('underscore/underscore')

class Dashboard extends Spine.Controller
  constructor: ->
    super
    @render()

  events: 
    submit: 'onSubmit'

  elements: 
    'select.channel'     : 'channel'
    'select.sources'     : 'source'
    'input[name="params"]': 'params'

  tools: []

  channels: []

  sources: ["GalaxyZooSubject"]

  bindSelect: require('views/bind_select')

  count: 0

  render: =>
    @html require('views/dashboard')() if @el.html

  addTool: (tool) ->
    @tools.push tool
    @channels.push tool.channel

  createTool: (className) ->
    @count += 1
    @append "<div class=\"tool\" id=\"#{@count}\"></div>"
    tool = new className({el: "##{@count}"})
    @addTool tool
    tool.append @bindSelect(@)

  onSubmit: (e) =>
    e.preventDefault()
    console.log @channel, @source, @params
    console.log @channel.find('option:selected').attr('value')
    console.log @source.find('option:selected').attr('value')
    console.log @params.val()

  bindTool: (tool, source, params=null) ->
    receiverTool = _.find @tools, (tool) ->
      tool.channel = tool
    if params
      receiverTool.getDataSource source
    else
      receiverTool.subscribe source, tool.process
      sourceTool = _.find @tools, (tool) ->
        tool.channel == source
      receiverTool.receiveData tool.data

module.exports = Dashboard