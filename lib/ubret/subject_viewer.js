// Generated by CoffeeScript 1.3.3
(function() {
  var BaseTool, SubjectViewer,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseTool = window.Ubret.BaseTool || require('./base_tool');

  SubjectViewer = (function(_super) {

    __extends(SubjectViewer, _super);

    SubjectViewer.prototype.template = "<ul>\n  <% for(i = 0; i < keys.length; i++) { %>\n    <li>\n      <%- keys[i] %>: <%- subject[keys[i]] %>\n    </li>\n  <% } %>\n</ul>";

    function SubjectViewer(opts) {
      this.render = __bind(this.render, this);

      this.start = __bind(this.start, this);
      SubjectViewer.__super__.constructor.apply(this, arguments);
      this.start();
    }

    SubjectViewer.prototype.start = function() {
      var data;
      data = this.dimensions.id.top(Infinity);
      return this.render();
    };

    SubjectViewer.prototype.render = function() {
      var compiled, subject,
        _this = this;
      if (this.selectedElements) {
        subject = _.find(this.dimensions.id.top(Infinity), function(record) {
          return record.id === _this.selectedElements[0];
        });
      } else {
        subject = this.dimensions.id.top(Infinity)[0];
      }
      compiled = _.template(this.template, {
        subject: subject,
        keys: this.keys
      });
      return this.el.html(compiled);
    };

    return SubjectViewer;

  })(BaseTool);

  if (typeof require === 'function' && typeof module === 'object' && typeof exports === 'object') {
    module.exports = SubjectViewer;
  } else {
    window.Ubret['SubjectViewer'] = SubjectViewer;
  }

}).call(this);
